{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo a nossa documenta\u00e7\u00e3o","text":""},{"location":"#commands","title":"Commands","text":"<ul> <li><code>poetry shell</code> - Entrando na shell do projeto.</li> <li><code>poetry self add poetry-plugin-shell</code> - caso o codigo acima de algum tipo de erro, execute este</li> <li><code>jupyter-lab</code> - Gerar e entrar na interface do jupyter</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # Arquivo de ajustes do mkdocs.\ndocs/\n    index.md  # O que nossa documenta\u00e7\u00e3o abrange.\n    delta-lake.md # O que nosso delta lake \u00e9 capaz de fazer\n    apache-iceberg.md # O que nosso apache iceberg \u00e9 capaz de fazer\n</code></pre>"},{"location":"apache-iceberg/","title":"Apache Iceberg","text":""},{"location":"apache-iceberg/#inicia-a-sessao-spark-com-configuracoes-do-iceberg","title":"Inicia a sess\u00e3o spark com configura\u00e7\u00f5es do Iceberg","text":"<pre><code>spark = SparkSession.builder \\\n  .appName(\"IcebergLocalDevelopment\") \\\n  .config('spark.jars.packages', 'org.apache.iceberg:iceberg-spark-runtime-3.5_2.12:1.6.1') \\\n  .config(\"spark.sql.extensions\", \"org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions\") \\\n  .config(\"spark.sql.catalog.local\", \"org.apache.iceberg.spark.SparkCatalog\") \\\n  .config(\"spark.sql.catalog.local.type\", \"hadoop\") \\\n  .config(\"spark.sql.catalog.local.warehouse\", \"spark-warehouse/iceberg\") \\\n  .getOrCreate()\n</code></pre>"},{"location":"apache-iceberg/#criacao-da-tabela-cliente_iceberg","title":"Cria\u00e7\u00e3o da tabela cliente_iceberg","text":"<pre><code>spark.sql(\n     \"\"\"\n     CREATE TABLE IF NOT EXISTS local.cliente_iceberg (\n         id INT NOT NULL,\n         nome_cliente STRING,\n         uf CHAR(2),\n         status BOOLEAN,\n         limite_credito FLOAT\n     ) USING iceberg\n     \"\"\"\n)\n</code></pre>"},{"location":"apache-iceberg/#insert","title":"Insert","text":"<pre><code>spark.sql(\"\"\"\n    INSERT INTO local.cliente_iceberg VALUES\n    (1, 'Jean', 'SP', true, 5000.0),\n    (2, 'Lucas', 'RJ', false, 3000.0),\n    (3, 'Matheus', 'MG', true, 7000.0)\n\"\"\")\n</code></pre>"},{"location":"apache-iceberg/#update","title":"Update","text":"<pre><code>spark.sql(\"\"\"\n    UPDATE local.cliente_iceberg\n    SET limite_credito = 8000.0\n    WHERE nome_cliente = 'Jean'\n\"\"\")\n</code></pre>"},{"location":"apache-iceberg/#delete","title":"Delete","text":"<pre><code>spark.sql(\"\"\"\n    DELETE FROM local.cliente_iceberg\n    WHERE id = 2\n\"\"\")\n</code></pre>"},{"location":"delta-lake/","title":"Delta Lake","text":"<pre><code>from pyspark.sql import SparkSession #Import para sess\u00e3o spark\nfrom pyspark.sql.functions import col\nfrom pyspark.sql.types import StructType, StructField, StringType, FloatType #Imports para estrutura e tipos\n\nfrom delta import *\n\nimport logging\n\nlogging.getLogger(\"py4j\").setLevel(logging.DEBUG)\n</code></pre>"},{"location":"delta-lake/#configuracao-da-sessao-spark","title":"Configura\u00e7\u00e3o da Sess\u00e3o spark","text":"<pre><code>spark = (\n    SparkSession\n    .builder\n    .master(\"local[*]\")\n    .config(\"spark.jars.packages\", \"io.delta:delta-spark_2.12:3.0.0\")\n    .config(\"spark.sql.extensions\", \"io.delta.sql.DeltaSparkSessionExtension\")\n    .config(\"spark.sql.catalog.spark_catalog\", \"org.apache.spark.sql.delta.catalog.DeltaCatalog\")\n    .getOrCreate()\n)\n</code></pre>"},{"location":"delta-lake/#criacao-da-tabela-cliente_delta","title":"Cria\u00e7\u00e3o da tabela cliente_delta","text":"<pre><code>spark.sql(\n     \"\"\"\n     CREATE TABLE IF NOT EXISTS default.clientes_delta (\n         id INT NOT NULL,\n         nome_cliente STRING NOT NULL,\n         uf CHAR(2) NOT NULL,\n         status BOOLEAN NOT NULL,\n         limite_credito FLOAT NOT NULL\n     ) USING delta\n     \"\"\"\n)\n</code></pre>"},{"location":"delta-lake/#realiza-um-select-na-tabela-criada-e-faz-o-output","title":"Realiza um select na tabela criada e faz o output","text":"<pre><code>spark.sql(\n    \"\"\"\n    SELECT * from default.clientes_delta\n    \"\"\"\n).show()\n</code></pre>"},{"location":"delta-lake/#criacao-da-delta-table-para-cliente-delta","title":"Cria\u00e7\u00e3o da delta table para cliente delta","text":"<pre><code>cliente = DeltaTable.forPath(spark, \"./spark-warehouse/clientes_delta\") \n</code></pre>"},{"location":"delta-lake/#insert","title":"INSERT","text":"<pre><code>spark.sql(\n    \"\"\"\n        INSERT INTO default.clientes_delta VALUES \n        (1, 'Jean Guichard\u00b2', 'RS', false, 10000000.0), \n        (2, 'Lucas da Rosa', 'SC', true, 1000000.0), \n        (3, 'Matheus Daminelli', 'SC', true, 4000000.0)   \n    \"\"\"\n)\n</code></pre>"},{"location":"delta-lake/#adicionando-coluna","title":"Adicionando coluna","text":"<pre><code>spark.sql(\n    \"\"\"\n    alter table default.clientes_delta add column cidade STRING\n    \"\"\"\n)\n</code></pre>"},{"location":"delta-lake/#update","title":"Update","text":"<pre><code>spark.sql(\"\"\"\n    UPDATE default.clientes_delta\n    SET cidade = CASE\n        WHEN id = 1 THEN 'Torres'\n        WHEN id = 2 THEN 'Tubar\u00e3o'\n        WHEN id = 3 THEN 'Crici\u00fama'\n        ELSE cidade\n    END\n\"\"\")\n</code></pre>"},{"location":"delta-lake/#verifica-se-e-uma-delta-table","title":"Verifica se \u00e9 uma delta table","text":"<pre><code>DeltaTable.isDeltaTable(spark, \"spark-warehouse/clientes_delta\")\n</code></pre>"},{"location":"delta-lake/#delete","title":"Delete","text":"<pre><code>spark.sql(\n    \"\"\"\n        DELETE FROM default.clientes_delta\n        WHERE uf = 'RS' AND status = false\n    \"\"\"\n)\n</code></pre>"},{"location":"delta-lake/#visualizacao-dos-dados","title":"Visualiza\u00e7\u00e3o dos dados","text":"<pre><code>spark.sql(\n    \"\"\"\n    SELECT * from default.clientes_delta\n    \"\"\"\n).show()\ncliente.toDF().show()\n</code></pre>"}]}